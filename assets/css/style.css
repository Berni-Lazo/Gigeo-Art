@charset "UTF-8";
/*
 * Patrón 7-1
 *
 * Esta es la estructura del patrón 7-1 utilizado en DesafíoLatam
 * para la enseñanza del uso correcto de patrones dentro de CSS y
 * también para la utilización de éste dentro de estructuras de
 * trabajo colaborativo.
 *
 * @author Cristóbal Domínguez <cristobald@me.com>
 * @since 1.0
 * @version 1.1
 *
 */
/*
 *
 * La carpeta abstracts/ reune todas las herramientas de SASS para el proyecto.
 * Cada variable global, función, mixin o placeholder debería estar aquí dentro.
 * 
 * La regla de oro para esta carpeta es que no deberá imprimir ni una sola línea
 * de código en el momento de la compilación del CSS. Nada como los helpers de Sass.
 * 
 * Cuando se trabaja en un proyecto muy grande con muchos archivos abstracts, podría
 * ser más interesante agruparlos por tópicos en vez de por tipo. Un ejemplo sería
 * crear las instancias typography (_typography.scss), theming (_theming.scss), etc.
 * Cada archivo contendría todos los helpers relacionados a esa instancia: variables, 
 * functions, mixins y placeholders. Hacerlo así podría hacer el código más sencillo de 
 * de mantener, especialmente cuando los archivos empiezan a crecer mucho.
 * 
 * Nota:
 * La carpeta abstracts/ podría llamarse utilities/ o helpers/, dependiendo de lo que
 * se prefiera.
 *
 * @author Cristóbal Domínguez <cristobald@me.com>
 * @since 1.0
 *
 */
/*
 *
 * Este archivo contiene las referencias del código boilerplate de tu proyecto.
 * Aquí podrás encontrar referencias al archivo _reset.scss, a las tipografías
 * y probablemente algún otro archivo de estilos que defina de una forma estándard
 * los estilos de elementos usados en HTML.
 *
 *
 * Nota: 
 * Si tu proyecto usa muchas animaciones, deberías considerar agregar dentro de
 * esta carpeta un archivo /_animations.scss que contenga las definiciones de los
 * @keyframes de todas tus animaciones.
 *
 * @author Cristóbal Domínguez <cristobald@me.com>
 * @since 1.0
 *
 */
/*
 *
 * En sitios/aplicaciones grandes es usual tener distintos temas o 
 * themes implementados. Hay diferentes caminos para lidiar con ese
 * problema, sin embargo uno de los más sencillos, a mi parecer, sería
 * tener cada theme dentro de su carpeta.
 * 
 * Nota:
 * La creación de esta carpeta es muy específica a cada proyecto, 
 * probablemente la mayoría de los sitio/aplicaciones no la necesitarán.
 *
 * @author Cristóbal Domínguez <cristobald@me.com>
 * @since 1.0
 *
 */
/*
 *
 * Esta carpeta contiene todo lo que hace relación con el sitio web o la aplicación.
 * Aquí encontrarás los estilos para las partes principales del sitio (header, footer, 
 * navigation, sidebar, etc), el sistema de grillas o incluso los estilos de los formularios
 *
 *
 * Nota:
 * La carpeta layout/ también podría ser llamada partials/, dependiendo de la 
 * preferencia del desarrollador.
 *
 * @author Cristóbal Domínguez <cristobald@me.com>
 * @since 1.0
 *
 */
.header {
  position: relative;
  min-height: 600px;
}
.header__img {
  width: 100%;
}

.upper {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 2em;
  width: 100vw;
  background-color: white;
  box-sizing: border-box;
  position: absolute;
}
.upper__logo h2 {
  font-size: 4em;
}

.nav {
  display: flex;
}
.nav__icon {
  font-size: 4em;
  padding: 0 1em;
}
.nav__icon--hidden {
  display: none;
}

.lower {
  background-color: white;
  position: absolute;
  bottom: 0;
  width: 100%;
}

.profile {
  display: flex;
  justify-content: center;
  align-items: center;
  font-family: "Raleway", sans-serif;
  padding: 2em;
}
.profile__image {
  width: 9em;
  height: 9em;
  border-radius: 50%;
}
.profile__text {
  margin-left: 1em;
}
.profile__title {
  font-size: 3em;
}
.profile__subtitle {
  font-size: 2em;
  color: gray;
}

.lower__buttons {
  display: none;
}

@media (min-width: 992px) {
  .nav__icon {
    font-size: 2em;
    padding: 0 1em;
  }
  .nav__icon--hidden {
    font-size: 2em;
    padding: 0 1em;
    display: block;
  }

  .lower {
    border-bottom: 1px solid gray;
    display: flex;
    justify-content: space-between;
  }
  .lower__buttons {
    display: flex;
    justify-content: center;
    align-items: center;
    align-content: center;
    padding: 1em;
    z-index: 2;
  }
  .lower__button {
    background-color: #5DADE2;
    color: white;
    text-decoration: none;
    padding: 0.5em 1.5em;
    font-family: "Raleway", sans-serif;
    font-size: 1.5em;
  }
  .lower__button--red {
    background-color: tomato;
    color: white;
    text-decoration: none;
    padding: 0.5em 1.5em;
    font-family: "Raleway", sans-serif;
    font-size: 1.5em;
    margin-left: 0.5em;
  }

  .profile {
    font-family: "Raleway", sans-serif;
  }
  .profile__image {
    width: 4em;
    height: 4em;
  }
  .profile__text {
    margin-left: 1.5em;
  }
  .profile__title {
    font-size: 1.5em;
    margin: 0;
  }
  .profile__subtitle {
    font-size: 1em;
    margin: 0;
  }
}
.main {
  font-family: "Raleway", sans-serif;
}
.main__title {
  text-align: center;
  font-size: 4em;
}

.container {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  margin: 0 auto;
  width: 100vw;
}

.item {
  display: flex;
  flex-direction: column;
  width: 550px;
  padding: 4em;
}
.item__image {
  width: 100%;
}
.item__title {
  font-size: 3em;
  padding: 0.5em 0;
  margin: 0;
}
.item__subtitle {
  font-size: 2em;
  padding: 0.5em 0;
  margin: 0;
}

@media (min-width: 992px) {
  .main__title {
    font-size: 2.5em;
    font-weight: 400;
    padding-left: 1em;
    text-align: left;
  }

  .item {
    width: 300px;
    padding: 1em;
  }
  .item__title {
    font-size: 1.5em;
    padding-top: 0.5em;
    padding-right: 0.5em;
  }
  .item__subtitle {
    font-size: 1.35em;
    font-weight: 300;
  }
}
/*
 * 
 * Esta carpeta fue creada para componentes o módulos pequeños como por ejemplo: 
 * sliders, loaders, widgets, etc. A diferencia de la carpeta layout/ donde almacenaremos
 * los componentes que definan el wireframe del sitio/aplicación, aquí encontraremos
 * componentes que aportarán más contenido que una estructura visual.
 * 
 * Usualmente deberían haber muchos archivos en components/ debido a que los 
 * sitios/aplicaciones se empezaron a crear en base a pequeños módulos de código.
 * 
 * Nota:
 * Esta carpeta también se podría llamar modules/, dependiendo de cómo tu la prefieras.
 *
 * @author Cristóbal Domínguez <cristobald@me.com>
 * @since 1.0
 *
 */
/*
 *
 * Si prefieres estilos de páginas específicas, es mejor ponerlos en la carpeta pages/.
 * Por cierto, es común tener estilos muy específicos para cada página, como por ejemplo:
 * home, de ahí la necesidad de crear un archivo _home.scss dentro de pages/.
 * 
 * Nota:
 * Dependiendo del proceso de tu desarrollo, estos archivos podrían ser cargados de forma
 * paralela al archivo de estilos principal, evitando juntarlos con los del estilo principal.
 * Sin embargo es una decisión de cada uno o de cada proyecto.
 *
 * @author Cristóbal Domínguez <cristobald@me.com>
 * @since 1.0
 *
 */

/*# sourceMappingURL=style.css.map */
